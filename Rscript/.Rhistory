fsQ<-as.data.table(dbGetQuery(conn,SQL("select * from metainfo.분기재무제표")))
fsY<-as.data.table(dbGetQuery(conn,SQL("select * from metainfo.연간재무제표")))
fs<-do.call(rbind,sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)))
corpData<-corpTable[6,]
corpData
corpData<-corpTable[5,]
corpData
corpData<-corpTable[7,]
corpData
corpData<-corpTable[4,]
corpData
fs<-do.call(rbind,sapply(1:nrow(corpData),function(x) cleanDataAndGetFactor(corpData[x,],fsY,fsQ)))
cleanDataAndGetFactor(corpData[x,],fsY,fsQ)
cleanDataAndGetFactor(corpData,fsY,fsQ)
corpData
cleanDataAndGetFactor(corpData,fsY,fsQ)
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
yearData<-fsY
quarterData<-fsQ
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(nrow(yData) == 0 & nrow(qData) == 0){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else { previousData<-yData[yRank==2] }
yData
qData
data
previousData
result <- cbind(corpData,as.data.table(t(getCurrentValueQualityFactorQuarter(corpData, data, previousData))))
marketPrice<-corpData$시가총액
code<-corpData$종목코드
data<-data[data$종목코드==code]
if(length(unique(data$일자))==4){
data<-sumQuarterData(data)
}
if(length(unique(previousData$일자))==4){
previousData<-sumQuarterData(data)
}
value_index<-c()
value_type <- c('지배주주순이익','자본','영업활동으로인한현금흐름','매출액','유상증자','매출총이익','영업이익',
'유동자산','부채','유상증자','자산','유동부채')
tmp<-previousData[previousData[,계정 %in% value_type]]$값
names(tmp)<-previousData[previousData[,계정 %in% value_type]]$계정
value_index<-c()
tmp
value_type <- c('지배주주순이익','자본','영업활동으로인한현금흐름','매출액','유상증자','매출총이익','영업이익',
'유동자산','부채','유상증자','자산','유동부채')
tmp<-previousData[previousData[,계정 %in% value_type]]$값
names(tmp)<-previousData[previousData[,계정 %in% value_type]]$계정
value_index<-c()
tmp
previousData
previousData$계정
previousData$계정=='유동부채'
data$계정=='유동부채'
data$계정=='유동자산'
tmp['유동부채']
is.na(tmp['유동부채'])
#PER, PBR, PCR, PSR, NCAV, GPA 계산(분기)
getCurrentValueQualityFactorQuarter<-function(corpData, data, previousData){
marketPrice<-corpData$시가총액
code<-corpData$종목코드
data<-data[data$종목코드==code]
if(length(unique(data$일자))==4){
data<-sumQuarterData(data)
}
if(length(unique(previousData$일자))==4){
previousData<-sumQuarterData(data)
}
value_index<-c()
value_type <- c('지배주주순이익','자본','영업활동으로인한현금흐름','매출액','유상증자','매출총이익','영업이익',
'유동자산','부채','유상증자','자산','유동부채')
tmp<-previousData[previousData[,계정 %in% value_type]]$값
names(tmp)<-previousData[previousData[,계정 %in% value_type]]$계정
value_index<-c()
last_value_index<-c()
last_value_index['지배주주순이익']<-tmp['지배주주순이익'] #수익
last_value_index['영업활동으로인한현금흐름']<-tmp['영업활동으로인한현금흐름'] #영업현금흐름
last_value_index['ROA']<-tmp['자산']/tmp['지배주주순이익'] #ROA 증가
last_value_index['영업활동으로인한현금흐름증가']<-tmp['영업활동으로인한현금흐름']-tmp['지배주주순이익'] #영업현금흐름크기
last_value_index['부채비율']<-tmp['부채']/tmp['자본'] #부채비율 증가
last_value_index['유동비율']<-tmp['유동자산']/tmp['유동부채'] #유동비율
last_value_index['자본']<-tmp['자본'] #신규주식발행
last_value_index['매출총이익']<-tmp['매출총이익']
last_value_index['자산회전율']<-tmp['매출액']/tmp['자산']
tmp<-data[data[,계정 %in% value_type]]$값
names(tmp)<-data[data[,계정 %in% value_type]]$계정
value_index['PER']<-tmp['지배주주순이익']
value_index['PBR']<-tmp['자본']
value_index['PCR']<-tmp['영업활동으로인한현금흐름']
value_index['PSR']<-tmp['매출액']
value_index['POR']<-tmp['영업이익']
data_value<-marketPrice/value_index
data_value['NCAV']<-tmp['유동자산']-tmp['부채']
data_value['GPA']<-tmp['매출총이익']/tmp['자산']
data_value['ROE']<-data_value['PBR']/data_value['PER']
data_value['ROA']<-data_value['ROE']*tmp['자산']/tmp['자본']
data_value['NCAV_Ratio']<-data_value['NCAV']/marketPrice
fscore<-0
newfscore<-0
if(!is.na(tmp['지배주주순이익']) & tmp['지배주주순이익']>0) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(tmp['영업활동으로인한현금흐름']) & tmp['영업활동으로인한현금흐름']>0) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(last_value_index['ROA']) & last_value_index['ROA']<data_value['ROA']) fscore<-fscore+1
if(!is.na(tmp['영업활동으로인한현금흐름']) & tmp['영업활동으로인한현금흐름']>tmp['지배주주순이익']) fscore<-fscore+1
if(!is.na(last_value_index['부채비율']) & last_value_index['부채비율']>tmp['부채']/tmp['자본']) fscore<-fscore+1
if(!is.na(last_value_index['유동비율']) & last_value_index['유동비율']<tmp['유동자산']/tmp['유동부채']) fscore<-fscore+1
if(!is.na(last_value_index['자본']) & last_value_index['자본']==tmp['자본']) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(last_value_index['매출총이익']) & last_value_index['매출총이익']<tmp['매출총이익']) fscore<-fscore+1
if(!is.na(last_value_index['자산회전율']) & last_value_index['자산회전율']<tmp['매출액']/tmp['자산']) fscore<-fscore+1
data_value['F-score']<-fscore
data_value['New F-score']<-newfscore
return(data_value)
}
fs<-sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
fs
fs<-do.call(rbind,sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)))
fs
cleanDataAndGetFactor<-function(corpData, yearData, quarterData){
result<-NULL
tryCatch(
{
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(nrow(yData) == 0 & nrow(qData) == 0){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else { previousData<-yData[yRank==2] }
result <- cbind(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData))
#scoreResult<-getFscore(corpData,Fdata)
Sys.sleep(0.3)
},
error=function(e) print(paste0("Fail to Read: ",code))
)
return(result)
}
fs<-do.call(rbind,sapply(1:nrow(corpData),function(x) cleanDataAndGetFactor(corpData[x,],fsY,fsQ)))
fs
fs<-do.call(rbind,sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)))
fs
fs<-sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
fs
cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)
cleanDataAndGetFactor(corpTable[1,],fsY,fsQ)
fs<-sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
fs
cleanDataAndGetFactor(corpTable[1,],fsY,fsQ)
result <- cbind(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData))
result
getCurrentValueQualityFactorQuarter(corpData, data, previousData)
result <- c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData))
result
cleanDataAndGetFactor<-function(corpData, yearData, quarterData){
result<-NULL
tryCatch(
{
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(nrow(yData) == 0 & nrow(qData) == 0){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else { previousData<-yData[yRank==2] }
result <- c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData))
#scoreResult<-getFscore(corpData,Fdata)
Sys.sleep(0.3)
},
error=function(e) print(paste0("Fail to Read: ",code))
)
return(result)
}
cleanDataAndGetFactor(corpTable[1,],fsY,fsQ)
fs<-sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
fs
fs<-sapply(1:nrow(corpTable),function(x) t(cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)))
fs
fs<-sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
fs
t(fs)
corpData
c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData))
t(c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData)))
as.data.frame(c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData)))
result <- as.data.table(c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData)))
result
cleanDataAndGetFactor<-function(corpData, yearData, quarterData){
result<-NULL
tryCatch(
{
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(nrow(yData) == 0 & nrow(qData) == 0){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else { previousData<-yData[yRank==2] }
result <- as.data.table(c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData)))
#scoreResult<-getFscore(corpData,Fdata)
Sys.sleep(0.3)
},
error=function(e) print(paste0("Fail to Read: ",code))
)
return(result)
}
fs<-sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
fs
cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)
x=4
cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)
sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
a<-NULL
sapply(1:nrow(corpTable),function(x) rbind(a,cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)))
a
rbind(a,cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
sapply(1:nrow(corpTable),function(x) a<-rbind(a,cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)))
a
sapply(1:nrow(corpTable),function(x) a<<-rbind(a,cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)))
a
?sapply
cleanDataAndGetFactor<-function(corpData, yearData, quarterData){
result<-NULL
tryCatch(
{
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(nrow(yData) == 0 & nrow(qData) == 0){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else { previousData<-yData[yRank==2] }
result <- c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData))
#scoreResult<-getFscore(corpData,Fdata)
Sys.sleep(0.3)
},
error=function(e) print(paste0("Fail to Read: ",code))
)
return(result)
}
sapply(1:nrow(corpTable),function(x) a<<-rbind(a,cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)))
a
lapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
fs<-lapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
do.call(rbind,fs)
a<-do.call(rbind,fs)
summary(a)
a$일자
a
a[,1]
fs[[1]]
fs
fs[1]
unlist(fs)
fs<-do.call(rbind,sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)))
fs
cleanDataAndGetFactor<-function(corpData, yearData, quarterData){
result<-NULL
tryCatch(
{
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(nrow(yData) == 0 & nrow(qData) == 0){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else { previousData<-yData[yRank==2] }
result <- t(c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData)))
#scoreResult<-getFscore(corpData,Fdata)
Sys.sleep(0.3)
},
error=function(e) print(paste0("Fail to Read: ",code))
)
return(result)
}
fs<-do.call(rbind,sapply(1:nrow(corpTable),function(x) cleanDataAndGetFactor(corpTable[x,],fsY,fsQ)))
fs
cleanDataAndGetFactor<-function(corpData, yearData, quarterData){
result<-NULL
tryCatch(
{
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(nrow(yData) == 0 & nrow(qData) == 0){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else { previousData<-yData[yRank==2] }
result <- c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData))
#scoreResult<-getFscore(corpData,Fdata)
Sys.sleep(0.3)
},
error=function(e) print(paste0("Fail to Read: ",code))
)
return(result)
}
source('C:/Users/vicen/Source/Repos/StockTradebot/Rscript/RQuantFunctionList.R', encoding = 'UTF-8', echo=TRUE)
library(RPostgres)
library(DBI)
conn<-dbConnect(RPostgres::Postgres(),dbname='stocks',host='203.243.21.33',port='5432',user='postgres',password='12dnjftod')
getwd()
#함수 불러돌이기
source("./RQuantFunctionList.R",encoding="utf-8")
View(WICSSectorInfo)
cleanDataAndGetFactor<-function(corpData, yearData, quarterData){
result<-NULL
tryCatch(
{
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(nrow(yData) == 0 & nrow(qData) == 0){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else { previousData<-yData[yRank==2] }
result <- c(corpData,getCurrentValueQualityFactorQuarter(corpData, data, previousData))
#scoreResult<-getFscore(corpData,Fdata)
Sys.sleep(0.3)
},
error=function(e) print(paste0("Fail to Read: ",code," Date:",businessDate))
)
return(result)
}
a
3/NA
for(i in 1:nrow(corpTable)){
fs<-rbind(fs,cleanDataAndGetFactor(corpTable[x,],fsY,fsQ))
}
a<-NULL
NULL
a$'계정'
corpTable
a<-corpTable
corpData<-corpTable[corpTable[,일자=='2019-12-30',종목코드='258790']]
corpData<-corpTable[corpTable[,일자=='2019-12-30']]
corpData
corpData<-corpTable[corpTable[,종목코드=='258790']]
corpData
corpTable
