failNum
while(failNum>0 & cnt<=2){
cnt<-cnt+1
rebuySheet<-buySheet[buyRes[rt_cd!='0']$idx]
rebuyRes<-orderStocks(apiConfig,account,rebuySheet)
failNum<-nrow(rebuyRes[rt_cd!='0'])
}
cnt<-0
failNum<-nrow(buyRes[rt_cd!='0'])
while(failNum>0 & cnt<=2){
cnt<-cnt+1
rebuySheet<-buySheet[buyRes[rt_cd!='0']$idx]
rebuyRes<-orderStocks(apiConfig,account,rebuySheet)
failNum<-nrow(rebuyRes[rt_cd!='0'])
}
source("~/StockTradebot/Rscript/Han2FunctionList.R") #macOS에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/Han2FunctionList.R") #라즈베리에서 읽는 경우
pkg = c('RPostgres', 'DBI','stringr')
new.pkg = pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg)) {
install.packages(new.pkg, dependencies = TRUE)}
sapply(pkg,library,character.only=T)
config<-fromJSON("~/config.json")
dbconfig<-config$database
conn<-dbConnect(RPostgres::Postgres(),dbname=dbconfig$database,host=dbconfig$host,port=dbconfig$port,user=dbconfig$user,password=dbconfig$passwd)
#apiConfig<-config$api$config$dev
apiConfig<-config$api$config$prod
#account<-config$api$account$dev
account<-config$api$account$prod$main
#재무제표 이상한 기업 우선 거르기
#최근 2년 간 분기재무제표에서 매출, 매출원가가 음수인 경우가 한 번이라도 있다면 목록에서 제거
prevDate<-str_replace(substring(Sys.Date()-730,1,7),'-','.')
sql<-sprintf("select * from metainfo.월별기업정보 a
where 일자=(select max(일자) from metainfo.월별기업정보)
and not exists (
select 1 from metainfo.분기재무제표 c
where 일자>'%s'
and (계정='매출액' or 계정='매출원가')
and 값<0 and a.종목코드=c.종목코드
)",prevDate)
corpTable<-dbGetQuery(conn,SQL(sql))
setDT(corpTable)
filter<-function(data){
dat<-data[관리여부!="관리종목"]
dat<-dat[is.na(매출총이익)==F]
dat<-dat[is.na(영업활동으로인한현금흐름)==F]
dat<-dat[is.na(자산)==F]
dat<-dat[매출액>=매출총이익] #매출원가가 -인 경우 제외
dat<-dat[자본>자본금] #자본잠식상태가 아님
dat<-dat[영업활동으로인한현금흐름>0]
dat<-dat[매출총이익>0]
dat<-dat[is.na(유상증자)] #최근 1년간 유상증자 안함
return(dat)
}
orderData<-function(data){
data[,SIZERANK:=rank(시가총액)]
data[,QUALITYRANK:=rank(-(매출총이익+영업활동으로인한현금흐름)/자산)]
data[,VALUERANK:=0]
data[,MOMENTUMRANK:=0]
data[,TOTALRANK:=QUALITYRANK+SIZERANK+VALUERANK+MOMENTUMRANK]
setorder(data,TOTALRANK,QUALITYRANK,SIZERANK)
return(data)
}
stocknum<-15
goalBalanceSum<-63000000
output<-filter(corpTable)
output<-orderData(output)
output<-output[1:stocknum]
output$일자<-as.character(output$일자)
print("Selected stocks")
print(output)
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
library(data.table)
library(xts)
library(PerformanceAnalytics)
library(quantmod)
symbols = c('QQQ','TQQQ','SQQQ')
getSymbols(symbols, src = 'yahoo',from='1990-01-01')
prices = do.call(cbind,
lapply(symbols, function(x) Ad(get(x))))
rets = Return.calculate(prices)
tqqqnaRow<-sum(is.na(prices$TQQQ.Adjusted))
prices<-as.data.table(prices)
rets<-as.data.table(rets)
rets[is.na(TQQQ.Adjusted),TQQQ.Adjusted:=QQQ.Adjusted*3]
rets[is.na(SQQQ.Adjusted),SQQQ.Adjusted:=-3*QQQ.Adjusted]
for(i in tqqqnaRow:1){
p<-prices[i+1,"TQQQ.Adjusted"]
ratio<-rets[i+1,TQQQ.Adjusted]
prices[i,TQQQ.Adjusted:=p/(1+ratio)]
pp<-prices[i+1,SQQQ.Adjusted]
rratio<-rets[i+1,SQQQ.Adjusted]
prices[i,SQQQ.Adjusted:=pp/(1+rratio)]
}
rets<-rets[-1,]
movingAvg<-NULL
for(i in c(5,10,20,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
priceWithMA<-cbind(as.xts(prices),movingAvg)
priceWithMA<-as.data.table(priceWithMA)
priceWith200MA<-priceWithMA[,.(index,QQQ.Adjusted,SQQQ.Adjusted,TQQQ.Adjusted,QQQ.Adjusted.MA.200)]
priceWith200MA[,QQQDisparity:=100*QQQ.Adjusted/QQQ.Adjusted.MA.200-100]
priceWith200MA<-na.omit(as.xts(priceWith200MA))
rets<-rets[,-"QQQ.Adjusted"]
rets<-as.xts(rets)
rets$Cash<-0
priceWith200MA<-as.data.table(priceWith200MA)
priceWith200MA[,TQQQinvestRatio:=0]
priceWith200MA[,SQQQinvestRatio:=0]
priceWith200MA[,CashinvestRatio:=0]
getTQQQInvestRatio<-function(table){
for(i in 1:nrow(table)){
disparity<-table[i,]$QQQDisparity
#TQQQratio
addRatio<-floor(disparity)*0.5
if(i>1){
prevRatio<-table[i-1,]$investRatio
if(addRatio>=0) addRatio<-max(prevRatio,addRatio)
if(addRatio<0) addRatio<-min(1+addRatio,prevRatio)
}
newRatio<-min(1,addRatio)
newRatio<-max(0,newRatio)
table[i,]$TQQQinvestRatio<-newRatio
}
return(table)
}
priceWithRatio
priceWith200MA
priceWith200MA$QQQDisparity
plot(priceWith200MA$QQQDisparity)
hist(priceWith200MA$QQQDisparity)
priceWith200MA[QQQDisparity>50]
priceWith200MA[QQQDisparity<-50]
priceWith200MA[QQQDisparity<(-50)]
plot(priceWith200MA$QQQDisparity)
summary(priceWith200MA$QQQDisparity)
priceWith200MA
priceWith200MA[index>'2001-01-01']
a<-priceWith200MA[index>'2002-01-01']
plot(a$QQQDisparity)
hist(a$QQQDisparity)
summary(a$QQQDisparity)
a<-priceWith200MA[index>'2003-01-01']
summary(a$QQQDisparity)
a$QQQDisparity<-20
a<-priceWith200MA[index>'2003-01-01']
a$QQQDisparity<(-20)
a[QQQDisparity<(-20)]
nrow(a)
quantile(a$QQQDisparity)
?quantile
quantile(a$QQQDisparity,probs=seq(0,1,0.1))
quantile(a$QQQDisparity,probs=seq(0,1,0.01))
a<-priceWith200MA
quantile(a$QQQDisparity,probs=seq(0,1,0.01))
quantile(a$QQQDisparity,probs=seq(0,1,0.01))[1%]
quantile(a$QQQDisparity,probs=seq(0,1,0.01))['1%']
median(a$QQQDisparity)
mean(a$QQQDisparity)
a
d<-'2023-06-01'
d
a[index<d]
tail(a[index<d],100)
c<-tail(a[index<d],100)
c
c$QQQ.Adjusted
plot(c$QQQ.Adjusted)
d
c
a[index<d]
d
d<-'2022-06-01'
c<-tail(a[index<d],100)
c
plot(c$QQQ.Adjusted)
?lm
index(c)
c$idx<-index(c)
lm(c$QQQ.Adjusted~c$idx)
summary(lm(c$QQQ.Adjusted~c$idx))
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
library(data.table)
library(xts)
library(PerformanceAnalytics)
library(quantmod)
symbols = c('QQQ','TQQQ','SQQQ')
getSymbols(symbols, src = 'yahoo',from='1990-01-01')
prices = do.call(cbind,
lapply(symbols, function(x) Ad(get(x))))
rets = Return.calculate(prices)
tqqqnaRow<-sum(is.na(prices$TQQQ.Adjusted))
prices<-as.data.table(prices)
rets<-as.data.table(rets)
rets[is.na(TQQQ.Adjusted),TQQQ.Adjusted:=QQQ.Adjusted*3]
rets[is.na(SQQQ.Adjusted),SQQQ.Adjusted:=-3*QQQ.Adjusted]
for(i in tqqqnaRow:1){
p<-prices[i+1,"TQQQ.Adjusted"]
ratio<-rets[i+1,TQQQ.Adjusted]
prices[i,TQQQ.Adjusted:=p/(1+ratio)]
pp<-prices[i+1,SQQQ.Adjusted]
rratio<-rets[i+1,SQQQ.Adjusted]
prices[i,SQQQ.Adjusted:=pp/(1+rratio)]
}
rets<-rets[-1,]
rets
prices
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
library(data.table)
library(xts)
library(PerformanceAnalytics)
library(quantmod)
symbols = c('QQQ','TQQQ','SQQQ')
getSymbols(symbols, src = 'yahoo',from='1990-01-01')
prices = do.call(cbind,
lapply(symbols, function(x) Ad(get(x))))
rets = Return.calculate(prices)
tqqqnaRow<-sum(is.na(prices$TQQQ.Adjusted))
prices<-as.data.table(prices)
rets<-as.data.table(rets)
rets[is.na(TQQQ.Adjusted),TQQQ.Adjusted:=QQQ.Adjusted*3]
rets[is.na(SQQQ.Adjusted),SQQQ.Adjusted:=-3*QQQ.Adjusted]
for(i in tqqqnaRow:1){
p<-prices[i+1,"TQQQ.Adjusted"]
ratio<-rets[i+1,TQQQ.Adjusted]
prices[i,TQQQ.Adjusted:=p/(1+ratio)]
pp<-prices[i+1,SQQQ.Adjusted]
rratio<-rets[i+1,SQQQ.Adjusted]
prices[i,SQQQ.Adjusted:=pp/(1+rratio)]
}
rets<-rets[-1,]
movingAvg<-NULL
for(i in c(5,10,20,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
movingAvg
priceWithMA<-cbind(as.xts(prices),movingAvg)
priceWith200MA<-priceWithMA[,.(index,QQQ.Adjusted,SQQQ.Adjusted,TQQQ.Adjusted,QQQ.Adjusted.MA.200)]
priceWithMA<-as.data.table(priceWithMA)
priceWithMA
priceWith200MA<-priceWithMA[,.(index,QQQ.Adjusted,SQQQ.Adjusted,TQQQ.Adjusted,QQQ.Adjusted.MA.200)]
priceWith200MA[,QQQDisparity:=100*QQQ.Adjusted/QQQ.Adjusted.MA.200-100]
priceWith200MA
priceWith200MA$QQQDisparity
hist(priceWith200MA$QQQDisparity)
quantile(priceWith200MA$QQQDisparity)
quantile(priceWith200MA$QQQDisparity,na.rm=T)
quantile(priceWith200MA$QQQDisparity,probs=seq(0,1,0.01),na.rm=T)
priceWith200MA
priceWith200MA[1,]
table<-priceWith200MA
i<-200
disparity<-table[i,]$QQQDisparity
regTable<-tail(table[index<=table[i,index]],nrow)
table[index<=table[i,index]]
tail(table[index<=table[i,index]],100)
nrow<-100
regTable<-tail(table[index<=table[i,index]],nrow)
regTable
regTable[,idx:=index(.SD)]
regTable
?lm
regression<-lm(regTable$QQQ.Adjusted~1:nrow)
nrow
regTable$QQQ.Adjusted
length(regTable$QQQ.Adjusted)
lm(regTable$QQQ.Adjusted~1:nrow)
lm(regTable$QQQ.Adjusted~(1:nrow))
lm(regTable$QQQ.Adjusted~seq(1:nrow))
summary(lm(regTable$QQQ.Adjusted~seq(1:nrow)))
regTable$QQQ.Adjusted
plot(regTable$QQQ.Adjusted)
plot(regTable$QQQ.Adjusted~regTable$index)
lm(regTable$QQQ.Adjusted~regTable$index)
lm(regTable$QQQ~seq(1,nrow))
lm(regTable$QQQ.Adjusted~seq(1,nrow))
regression<-summary(lm(regTable$QQQ.Adjusted~1:nrow))
regression<-summary(lm(regTable$QQQ.Adjusted~seq(1,nrow)))
regression
regression$coefficients
regression$coefficients$Estimate
regression$coefficients
regression$coefficients[1,]
regression$coefficients[2,]
regression$coefficients[2,"Pr(>|t|)"]
coef<-regression$coefficients[1,1]
coef
coef<-regression$coefficients[2,1]
coef
pval<-regression$coefficients[2,4]
pval
pval<0.01 & coef<0
(pval<0.01 & coef<0)==0
signal<- pval<0.01 & coef<0
signal
disparity
9/3
15
18
21
24
16/3
int(16/3)
hist(priceWith200MA$QQQ.Adjusted)
hist(priceWith200MA$QQQDisparity)
priceWith200MA
disparity
disparity>-3
disparity> -3
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
library(data.table)
library(xts)
library(PerformanceAnalytics)
library(quantmod)
symbols = c('QQQ','TQQQ','SQQQ')
getSymbols(symbols, src = 'yahoo',from='1990-01-01')
prices = do.call(cbind,
lapply(symbols, function(x) Ad(get(x))))
rets = Return.calculate(prices)
tqqqnaRow<-sum(is.na(prices$TQQQ.Adjusted))
prices<-as.data.table(prices)
rets<-as.data.table(rets)
rets[is.na(TQQQ.Adjusted),TQQQ.Adjusted:=QQQ.Adjusted*3]
rets[is.na(SQQQ.Adjusted),SQQQ.Adjusted:=-3*QQQ.Adjusted]
for(i in tqqqnaRow:1){
p<-prices[i+1,"TQQQ.Adjusted"]
ratio<-rets[i+1,TQQQ.Adjusted]
prices[i,TQQQ.Adjusted:=p/(1+ratio)]
pp<-prices[i+1,SQQQ.Adjusted]
rratio<-rets[i+1,SQQQ.Adjusted]
prices[i,SQQQ.Adjusted:=pp/(1+rratio)]
}
rets<-rets[-1,]
movingAvg<-NULL
for(i in c(5,10,20,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
priceWithMA<-cbind(as.xts(prices),movingAvg)
priceWithMA<-as.data.table(priceWithMA)
priceWith200MA<-priceWithMA[,.(index,QQQ.Adjusted,SQQQ.Adjusted,TQQQ.Adjusted,QQQ.Adjusted.MA.200)]
priceWith200MA[,QQQDisparity:=100*QQQ.Adjusted/QQQ.Adjusted.MA.200-100]
priceWith200MA<-na.omit(as.xts(priceWith200MA))
rets<-rets[,-"QQQ.Adjusted"]
rets<-as.xts(rets)
rets$Cash<-0
getTQQQInvestRatio<-function(table,nrow){
for(i in 1:nrow(table)){
if(is.na(table$QQQDisparity)) next
disparity<-table[i,]$QQQDisparity
if(disparity>0) next
regTable<-tail(table[index<=table[i,index]],nrow)
regression<-summary(lm(regTable$QQQ.Adjusted~seq(1,nrow)))
coef<-regression$coefficients[2,1]
pval<-regression$coefficients[2,4]
signal<- pval<0.01 & coef<0 & disparity<=(-15)
if(signal) {
ratio<-min(floor(-(disparity+15)/3)*0.1+0.1,1)
table[i,]$disparityFlag<-F
} else if(i>1 & disparity< -3){
prevRatio<-table[i-1,]$TQQQinvestRatio
prevDisparityFlag<-table[i-1,]$disparityFlag
if(disparity> -9 & prevDisparityFlag==F) {
ratio <- prevRatio*0.5
table[i,]$disparityFlag=T
} else ratio<-prevRatio
}
else ratio<-0
table[i,]$TQQQinvestRatio<-ratio
}
return(table)
}
priceWithRatio<-as.data.table(priceWith200MA)
priceWithRatio[,TQQQinvestRatio:=0]
priceWithRatio[,SQQQinvestRatio:=0]
priceWithRatio[,CashinvestRatio:=0]
priceWithRatio[,disparityFlag:=F]
priceWithRatio<-priceWithRatio[,getTQQQInvestRatio(.SD)]
priceWithRatio<-priceWithRatio[,getTQQQInvestRatio(.SD,100)]
getTQQQInvestRatio<-function(table,nrow){
for(i in 1:nrow(table)){
disparity<-table[i,]$QQQDisparity
if(is.na(disparity)) next
if(disparity>0) next
regTable<-tail(table[index<=table[i,index]],nrow)
regression<-summary(lm(regTable$QQQ.Adjusted~seq(1,nrow)))
coef<-regression$coefficients[2,1]
pval<-regression$coefficients[2,4]
signal<- pval<0.01 & coef<0 & disparity<=(-15)
if(signal) {
ratio<-min(floor(-(disparity+15)/3)*0.1+0.1,1)
table[i,]$disparityFlag<-F
} else if(i>1 & disparity< -3){
prevRatio<-table[i-1,]$TQQQinvestRatio
prevDisparityFlag<-table[i-1,]$disparityFlag
if(disparity> -9 & prevDisparityFlag==F) {
ratio <- prevRatio*0.5
table[i,]$disparityFlag=T
} else ratio<-prevRatio
}
else ratio<-0
table[i,]$TQQQinvestRatio<-ratio
}
return(table)
}
getTQQQInvestRatio<-function(table,nrow){
for(i in 1:nrow(table)){
disparity<-table[i,]$QQQDisparity
if(is.na(disparity)) next
if(disparity>0) next
regTable<-tail(table[index<=table[i,index]],nrow)
regression<-summary(lm(regTable$QQQ.Adjusted~seq(1,nrow)))
coef<-regression$coefficients[2,1]
pval<-regression$coefficients[2,4]
signal<- pval<0.01 & coef<0 & disparity<=(-15)
if(signal) {
ratio<-min(floor(-(disparity+15)/3)*0.1+0.1,1)
table[i,]$disparityFlag<-F
} else if(i>1 & disparity< -3){
prevRatio<-table[i-1,]$TQQQinvestRatio
prevDisparityFlag<-table[i-1,]$disparityFlag
if(disparity> -9 & prevDisparityFlag==F) {
ratio <- prevRatio*0.5
table[i,]$disparityFlag=T
} else ratio<-prevRatio
}
else ratio<-0
table[i,]$TQQQinvestRatio<-ratio
}
return(table)
}
table
getTQQQInvestRatio<-function(table,nrow){
for(i in 1:nrow(table)){
disparity<-table[i,]$QQQDisparity
if(is.na(disparity)) next
if(disparity>0) next
regTable<-tail(table[index<=table[i,index]],nrow)
regression<-summary(lm(regTable$QQQ.Adjusted~seq(1,nrow)))
coef<-regression$coefficients[2,1]
pval<-regression$coefficients[2,4]
signal<- pval<0.01 & coef<0 & disparity<=(-15)
if(signal) {
ratio<-min(floor(-(disparity+15)/3)*0.1+0.1,1)
table[i,]$disparityFlag<-F
} else if(i>1 & disparity< -3){
prevRatio<-table[i-1,]$TQQQinvestRatio
prevDisparityFlag<-table[i-1,]$disparityFlag
if(disparity> -9 & prevDisparityFlag==F) {
ratio <- prevRatio*0.5
table[i,]$disparityFlag=T
} else ratio<-prevRatio
}
else ratio<-0
table[i,]$TQQQinvestRatio<-ratio
}
return(table)
}
priceWithRatio<-as.data.table(priceWith200MA)
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
library(data.table)
library(xts)
library(PerformanceAnalytics)
library(quantmod)
symbols = c('QQQ','TQQQ','SQQQ')
getSymbols(symbols, src = 'yahoo',from='1990-01-01')
prices = do.call(cbind,
lapply(symbols, function(x) Ad(get(x))))
rets = Return.calculate(prices)
tqqqnaRow<-sum(is.na(prices$TQQQ.Adjusted))
prices<-as.data.table(prices)
rets<-as.data.table(rets)
rets[is.na(TQQQ.Adjusted),TQQQ.Adjusted:=QQQ.Adjusted*3]
rets[is.na(SQQQ.Adjusted),SQQQ.Adjusted:=-3*QQQ.Adjusted]
for(i in tqqqnaRow:1){
p<-prices[i+1,"TQQQ.Adjusted"]
ratio<-rets[i+1,TQQQ.Adjusted]
prices[i,TQQQ.Adjusted:=p/(1+ratio)]
pp<-prices[i+1,SQQQ.Adjusted]
rratio<-rets[i+1,SQQQ.Adjusted]
prices[i,SQQQ.Adjusted:=pp/(1+rratio)]
}
rets<-rets[-1,]
movingAvg<-NULL
for(i in c(5,10,20,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
priceWithMA<-cbind(as.xts(prices),movingAvg)
priceWithMA<-as.data.table(priceWithMA)
priceWith200MA<-priceWithMA[,.(index,QQQ.Adjusted,SQQQ.Adjusted,TQQQ.Adjusted,QQQ.Adjusted.MA.200)]
priceWith200MA[,QQQDisparity:=100*QQQ.Adjusted/QQQ.Adjusted.MA.200-100]
priceWith200MA<-na.omit(as.xts(priceWith200MA))
rets<-rets[,-"QQQ.Adjusted"]
rets<-as.xts(rets)
rets$Cash<-0
