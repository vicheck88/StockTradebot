a<-corpTable[종목코드=='316140']
a
corpData<-a[1,]
corpData
corpData<-a[5,]
cleanDataAndGetFactor(corpTable[i,],fsY,fsQ)
yearData
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(nrow(yData) == 0 & nrow(qData) == 0){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else if(length(unique(yDate))>=2) {
previousData<-yData[yRank==2] } else{
previousData<-NULL
}
data
previousData
yearData
yData
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
yData
qData
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
lastYearDate
lastlastYearDate
businessDate
yData[yDate<=businessDate & yDate>=lastlastYearDate]
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yData
qData
yRank
qRank
yRank==0
length(yRank)
length(qRank)
length(unique(qRank))
corpData
cleanDataAndGetFactor<-function(corpData, yearData, quarterData){
result<-NULL
tryCatch(
{
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(length(yRank) == 0 & length(unique(qData)) < 4 ){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else if(length(unique(yDate))>=2) {
previousData<-yData[yRank==2] } else{
previousData<-NULL
}
result <- getCurrentValueQualityFactorQuarter(corpData, data, previousData)
},
error=function(e) print(paste0("Fail to Read: ",code," Date:",businessDate))
)
return(result)
}
ㅁ
a
for(i in 1:nrow(a)){
fs<-rbind(fs,cleanDataAndGetFactor(corpTable[i,],fsY,fsQ))
}
fs<-NULL
for(i in 1:nrow(a)){
fs<-rbind(fs,cleanDataAndGetFactor(corpTable[i,],fsY,fsQ))
}
a
for(i in 1:nrow(a)){
fs<-rbind(fs,cleanDataAndGetFactor(a[i,],fsY,fsQ))
}
cleanDataAndGetFactor<-function(corpData, yearData, quarterData){
result<-NULL
tryCatch(
{
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(length(yRank) == 0 & length(unique(qData)) < 4 ){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else if(length(unique(yDate))>=2) {
previousData<-yData[yRank==2] } else{
previousData<-NULL
}
result <- getCurrentValueQualityFactorQuarter(corpData, data, previousData)
},
error=function(e) print(paste0("Fail to Read: ",code," Date:",businessDate))
)
return(result)
}
for(i in 1:nrow(a)){
fs<-rbind(fs,cleanDataAndGetFactor(a[i,],fsY,fsQ))
}
corpData
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(length(yRank) == 0 & length(unique(qData)) < 4 ){return(result)}
yRank
qRank
length(yRank) == 0 & length(unique(qData)) < 4
length(yRank)==0
cleanDataAndGetFactor<-function(corpData, yearData, quarterData){
result<-NULL
tryCatch(
{
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
if(length(yRank) == 0 & length(unique(qRank)) < 4 ){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else if(length(unique(yDate))>=2) {
previousData<-yData[yRank==2] } else{
previousData<-NULL
}
result <- getCurrentValueQualityFactorQuarter(corpData, data, previousData)
},
error=function(e) print(paste0("Fail to Read: ",code," Date:",businessDate))
)
return(result)
}
for(i in 1:nrow(a)){
fs<-rbind(fs,cleanDataAndGetFactor(a[i,],fsY,fsQ))
}
fs
a<-corpTable[종목코드=='086250']
for(i in 1:nrow(a)){
fs<-rbind(fs,cleanDataAndGetFactor(a[i,],fsY,fsQ))
}
ㄹㄴ
fs
a<-corpTable[종목코드=='208340']
for(i in 1:nrow(a)){
fs<-rbind(fs,cleanDataAndGetFactor(a[i,],fsY,fsQ))
}
a
corpData<-a[18,]
businessDate<-as.Date(corpData[[1]],format='%Y-%m-%d')
code<-corpData[[2]]
yData<-yearData[yearData$종목코드==code,]
qData<-quarterData[quarterData$종목코드==code,]
yDate<-as.Date(paste0(yData$일자,'.01'),format='%Y.%m.%d')
qDate<-as.Date(paste0(qData$일자,'.01'),format='%Y.%m.%d')
monthCrit<-month(yDate[1])
monthTerm<-rep(3,12)
monthTerm[monthCrit]<-4
month(yDate)<-month(yDate)+4
month(qDate)<-month(qDate)+monthTerm[month(qDate)]
lastYearDate<-businessDate
year(lastYearDate)<-year(businessDate)-1
lastlastYearDate<-lastYearDate
year(lastlastYearDate)<-year(lastYearDate)-1
yData<-yData[yDate<=businessDate & yDate>=lastlastYearDate]
qData<-qData[qDate<=businessDate & qDate>=lastlastYearDate]
yDate<-yData$일자
qDate<-qData$일자
qRank<-frank(-as.double(qDate),ties.method="dense")
yRank<-frank(-as.double(yDate),ties.method="dense")
qRank
yRank
if(length(yRank) == 0 & length(unique(qRank)) < 4 ){return(result)}
if(length(unique(qDate))>=4){
data<-qData[qRank<=4]
} else{ data<-yData[yRank==1] }
if(length(unique(qDate))>=5){
previousData<-qData[qRank>=2 & qRank<=5]
} else if(length(unique(yDate))>=2) {
previousData<-yData[yRank==2] } else{
previousData<-NULL
}
data
previousData
getCurrentValueQualityFactorQuarter(corpData, data, previousData)
marketPrice<-corpData$시가총액
code<-corpData$종목코드
data<-data[data$종목코드==code]
if(length(unique(data$일자))==4){
data<-sumQuarterData(data)
}
if(!is.null(previousData) & length(unique(previousData$일자))==4){
previousData<-sumQuarterData(data)
}
value_type <- c('지배주주순이익','자본','영업활동으로인한현금흐름','매출액','유상증자','매출총이익','영업이익',
'유동자산','부채','유상증자','자산','유동부채','당기순이익')
if(!is.null(previousData)){
tmp<-previousData[previousData[,계정 %in% value_type]]$값
names(tmp)<-previousData[previousData[,계정 %in% value_type]]$계정
last_value_index<-c()
last_value_index['지배주주순이익']<-tmp['지배주주순이익'] #수익
last_value_index['영업활동으로인한현금흐름']<-tmp['영업활동으로인한현금흐름'] #영업현금흐름
last_value_index['ROA']<-tmp['자산']/tmp['지배주주순이익'] #ROA 증가
last_value_index['영업활동으로인한현금흐름증가']<-tmp['영업활동으로인한현금흐름']-tmp['지배주주순이익'] #영업현금흐름크기
last_value_index['부채비율']<-tmp['부채']/tmp['자본'] #부채비율 증가
last_value_index['유동비율']<-tmp['유동자산']/tmp['유동부채'] #유동비율
last_value_index['자본']<-tmp['자본'] #신규주식발행
last_value_index['매출총이익']<-tmp['매출총이익']
last_value_index['자산회전율']<-tmp['매출액']/tmp['자산']
}
tmp
tmp<-data[data[,계정 %in% value_type]]$값
names(tmp)<-data[data[,계정 %in% value_type]]$계정
if(!is.na(tmp['지배주주순이익'])){
corpData[,PER:= marketPrice/tmp['지배주주순이익'] ]
} else if(!is.na(tmp['당기순이익'])){
corpData[,PER:= marketPrice/tmp['당기순이익'] ]
}
corpData[,PBR:=marketPrice/tmp['자본']]
corpData[,PCR:=marketPrice/tmp['영업활동으로인한현금흐름']]
corpData[,PSR:=marketPrice/tmp['매출액']]
corpData[,POR:=marketPrice/tmp['영업이익']]
corpData[,NCAV:=tmp['유동자산']-tmp['부채']]
corpData
if(!is.na(tmp['자산'])) corpData[,GPA:=tmp['매출총이익']/tmp['자산']]
if(!is.na(corpData[,PER])) corpData[,ROE:=corpData$PBR/corpData$PER]
if(!is.na(tmp['자본'])) corpData[,ROA:=corpData$ROE*tmp['자산']/tmp['자본']]
corpData[,NCAV_Ratio:=corpData[,NCAV]/marketPrice]
fscore<-as.integer(0)
newfscore<-as.integer(0)
if(!is.na(tmp['지배주주순이익']) & tmp['지배주주순이익']>0) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(tmp['영업활동으로인한현금흐름']) & tmp['영업활동으로인한현금흐름']>0) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(tmp['영업활동으로인한현금흐름']) & !is.na(tmp['지배주주순이익'])
& tmp['영업활동으로인한현금흐름']>tmp['지배주주순이익']) fscore<-fscore+1
if(!is.null(previousData)){
if(!is.na(last_value_index['ROA']) & last_value_index['ROA']<corpData$ROA) fscore<-fscore+1
if(!is.na(last_value_index['부채비율']) & !is.na(tmp['자본']) & last_value_index['부채비율']>tmp['부채']/tmp['자본']) fscore<-fscore+1
if(!is.na(last_value_index['유동비율']) & !is.na(tmp['유동부채'] & last_value_index['유동비율']<tmp['유동자산']/tmp['유동부채'])) fscore<-fscore+1
if(!is.na(last_value_index['자본']) & last_value_index['자본']==tmp['자본']) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(last_value_index['매출총이익']) & last_value_index['매출총이익']<tmp['매출총이익']) fscore<-fscore+1
if(!is.na(last_value_index['자산회전율']) & !is.na(tmp['자산']) & last_value_index['자산회전율']<tmp['매출액']/tmp['자산']) fscore<-fscore+1
}
last_value_index["매출총이익"]
tmp['매출총이익']
data
is.na(corpData$ROA)
#PER, PBR, PCR, PSR, NCAV, GPA 계산(분기)
getCurrentValueQualityFactorQuarter<-function(corpData, data, previousData){
marketPrice<-corpData$시가총액
code<-corpData$종목코드
data<-data[data$종목코드==code]
if(length(unique(data$일자))==4){
data<-sumQuarterData(data)
}
if(!is.null(previousData) & length(unique(previousData$일자))==4){
previousData<-sumQuarterData(data)
}
value_type <- c('지배주주순이익','자본','영업활동으로인한현금흐름','매출액','유상증자','매출총이익','영업이익',
'유동자산','부채','유상증자','자산','유동부채','당기순이익')
if(!is.null(previousData)){
tmp<-previousData[previousData[,계정 %in% value_type]]$값
names(tmp)<-previousData[previousData[,계정 %in% value_type]]$계정
last_value_index<-c()
last_value_index['지배주주순이익']<-tmp['지배주주순이익'] #수익
last_value_index['영업활동으로인한현금흐름']<-tmp['영업활동으로인한현금흐름'] #영업현금흐름
last_value_index['ROA']<-tmp['자산']/tmp['지배주주순이익'] #ROA 증가
last_value_index['영업활동으로인한현금흐름증가']<-tmp['영업활동으로인한현금흐름']-tmp['지배주주순이익'] #영업현금흐름크기
last_value_index['부채비율']<-tmp['부채']/tmp['자본'] #부채비율 증가
last_value_index['유동비율']<-tmp['유동자산']/tmp['유동부채'] #유동비율
last_value_index['자본']<-tmp['자본'] #신규주식발행
last_value_index['매출총이익']<-tmp['매출총이익']
last_value_index['자산회전율']<-tmp['매출액']/tmp['자산']
}
tmp<-data[data[,계정 %in% value_type]]$값
names(tmp)<-data[data[,계정 %in% value_type]]$계정
if(!is.na(tmp['지배주주순이익'])){
corpData[,PER:= marketPrice/tmp['지배주주순이익'] ]
} else if(!is.na(tmp['당기순이익'])){
corpData[,PER:= marketPrice/tmp['당기순이익'] ]
}
corpData[,PBR:=marketPrice/tmp['자본']]
corpData[,PCR:=marketPrice/tmp['영업활동으로인한현금흐름']]
corpData[,PSR:=marketPrice/tmp['매출액']]
corpData[,POR:=marketPrice/tmp['영업이익']]
corpData[,NCAV:=tmp['유동자산']-tmp['부채']]
if(!is.na(tmp['자산'])) corpData[,GPA:=tmp['매출총이익']/tmp['자산']]
if(!is.na(corpData[,PER])) corpData[,ROE:=corpData$PBR/corpData$PER]
if(!is.na(tmp['자본'])) corpData[,ROA:=corpData$ROE*tmp['자산']/tmp['자본']]
corpData[,NCAV_Ratio:=corpData[,NCAV]/marketPrice]
fscore<-as.integer(0)
newfscore<-as.integer(0)
if(!is.na(tmp['지배주주순이익']) & tmp['지배주주순이익']>0) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(tmp['영업활동으로인한현금흐름']) & tmp['영업활동으로인한현금흐름']>0) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(tmp['영업활동으로인한현금흐름']) & !is.na(tmp['지배주주순이익'])
& tmp['영업활동으로인한현금흐름']>tmp['지배주주순이익']) fscore<-fscore+1
if(!is.null(previousData)){
if(!is.na(last_value_index['ROA']) & !is.na(corpData$ROA) &
last_value_index['ROA']<corpData$ROA) fscore<-fscore+1
if(!is.na(last_value_index['부채비율']) & !is.na(tmp['자본']) & !is.na(tmp['부채']) &
last_value_index['부채비율']>tmp['부채']/tmp['자본']) fscore<-fscore+1
if(!is.na(last_value_index['유동비율']) & !is.na(tmp['유동부채'] & !is.na(tmp['유동자산']) &
last_value_index['유동비율']<tmp['유동자산']/tmp['유동부채'])) fscore<-fscore+1
if(!is.na(last_value_index['자본']) & !is.na(tmp['자본']) &
last_value_index['자본']==tmp['자본']) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(last_value_index['매출총이익']) & !is.na(tmp['매출총이익']) &
last_value_index['매출총이익']<tmp['매출총이익']) fscore<-fscore+1
if(!is.na(last_value_index['자산회전율']) & !is.na(tmp['자산']) & !is.na(tmp['매출액'])
last_value_index['자산회전율']<tmp['매출액']/tmp['자산']) fscore<-fscore+1
}
corpData[,Fscore:=fscore]
corpData[,New_Fscore:=newfscore]
return(corpData)
}
#PER, PBR, PCR, PSR, NCAV, GPA 계산(분기)
getCurrentValueQualityFactorQuarter<-function(corpData, data, previousData){
marketPrice<-corpData$시가총액
code<-corpData$종목코드
data<-data[data$종목코드==code]
if(length(unique(data$일자))==4){
data<-sumQuarterData(data)
}
if(!is.null(previousData) & length(unique(previousData$일자))==4){
previousData<-sumQuarterData(data)
}
value_type <- c('지배주주순이익','자본','영업활동으로인한현금흐름','매출액','유상증자','매출총이익','영업이익',
'유동자산','부채','유상증자','자산','유동부채','당기순이익')
if(!is.null(previousData)){
tmp<-previousData[previousData[,계정 %in% value_type]]$값
names(tmp)<-previousData[previousData[,계정 %in% value_type]]$계정
last_value_index<-c()
last_value_index['지배주주순이익']<-tmp['지배주주순이익'] #수익
last_value_index['영업활동으로인한현금흐름']<-tmp['영업활동으로인한현금흐름'] #영업현금흐름
last_value_index['ROA']<-tmp['자산']/tmp['지배주주순이익'] #ROA 증가
last_value_index['영업활동으로인한현금흐름증가']<-tmp['영업활동으로인한현금흐름']-tmp['지배주주순이익'] #영업현금흐름크기
last_value_index['부채비율']<-tmp['부채']/tmp['자본'] #부채비율 증가
last_value_index['유동비율']<-tmp['유동자산']/tmp['유동부채'] #유동비율
last_value_index['자본']<-tmp['자본'] #신규주식발행
last_value_index['매출총이익']<-tmp['매출총이익']
last_value_index['자산회전율']<-tmp['매출액']/tmp['자산']
}
tmp<-data[data[,계정 %in% value_type]]$값
names(tmp)<-data[data[,계정 %in% value_type]]$계정
if(!is.na(tmp['지배주주순이익'])){
corpData[,PER:= marketPrice/tmp['지배주주순이익'] ]
} else if(!is.na(tmp['당기순이익'])){
corpData[,PER:= marketPrice/tmp['당기순이익'] ]
}
corpData[,PBR:=marketPrice/tmp['자본']]
corpData[,PCR:=marketPrice/tmp['영업활동으로인한현금흐름']]
corpData[,PSR:=marketPrice/tmp['매출액']]
corpData[,POR:=marketPrice/tmp['영업이익']]
corpData[,NCAV:=tmp['유동자산']-tmp['부채']]
if(!is.na(tmp['자산'])) corpData[,GPA:=tmp['매출총이익']/tmp['자산']]
if(!is.na(corpData[,PER])) corpData[,ROE:=corpData$PBR/corpData$PER]
if(!is.na(tmp['자본'])) corpData[,ROA:=corpData$ROE*tmp['자산']/tmp['자본']]
corpData[,NCAV_Ratio:=corpData[,NCAV]/marketPrice]
fscore<-as.integer(0)
newfscore<-as.integer(0)
if(!is.na(tmp['지배주주순이익']) & tmp['지배주주순이익']>0) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(tmp['영업활동으로인한현금흐름']) & tmp['영업활동으로인한현금흐름']>0) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(tmp['영업활동으로인한현금흐름']) & !is.na(tmp['지배주주순이익'])
& tmp['영업활동으로인한현금흐름']>tmp['지배주주순이익']) fscore<-fscore+1
if(!is.null(previousData)){
if(!is.na(last_value_index['ROA']) & !is.na(corpData$ROA) &
last_value_index['ROA']<corpData$ROA) fscore<-fscore+1
if(!is.na(last_value_index['부채비율']) & !is.na(tmp['자본']) & !is.na(tmp['부채']) &
last_value_index['부채비율']>tmp['부채']/tmp['자본']) fscore<-fscore+1
if(!is.na(last_value_index['유동비율']) & !is.na(tmp['유동부채'] & !is.na(tmp['유동자산']) &
last_value_index['유동비율']<tmp['유동자산']/tmp['유동부채'])) fscore<-fscore+1
if(!is.na(last_value_index['자본']) & !is.na(tmp['자본']) &
last_value_index['자본']==tmp['자본']) {fscore<-fscore+1; newfscore<-newfscore+1;}
if(!is.na(last_value_index['매출총이익']) & !is.na(tmp['매출총이익']) &
last_value_index['매출총이익']<tmp['매출총이익']) fscore<-fscore+1
if(!is.na(last_value_index['자산회전율']) & !is.na(tmp['자산']) & !is.na(tmp['매출액']) &
last_value_index['자산회전율']<tmp['매출액']/tmp['자산']) fscore<-fscore+1
}
corpData[,Fscore:=fscore]
corpData[,New_Fscore:=newfscore]
return(corpData)
}
ㅁ
a
for(i in 1:nrow(a)){
fs<-rbind(fs,cleanDataAndGetFactor(a[i,],fsY,fsQ))
}
fs
a<-corpTable[좀목코드=='208340' & 일자 %in% c('2020-04-29','2020-05-27')]
a<-corpTable[종종목코드=='208340' & 일자 %in% c('2020-04-29','2020-05-27')]
a<-corpTable[종목코드=='208340' & 일자 %in% c('2020-04-29','2020-05-27')]
a
a<-corpTable[종목코드=='208340']
a
a<-corpTable[종목코드=='208340' &( 일자 %in% c('2020-04-29','2020-05-27'))]
a
corpTable[일자 %in% c('2020-04-29','2020-05-27')]
a<-corpTable[종목코드=='208340']
a<-a[일자=='2020-04-29' | 일자=='2020-05-27']
a
#전월 말 날짜 구하기
availableDate<-getLastBizdayofMonth(3)
availableDate
Sys.Date()
