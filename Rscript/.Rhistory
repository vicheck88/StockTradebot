source("~/StockTradebot/Rscript/Han2FunctionList.R") #macOS에서 읽는 경우
source("~/StockTradebot/Rscript/telegramAPI.R") #macOS에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/Han2FunctionList.R") #라즈베리에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/telegramAPI.R") #라즈베리에서 읽는 경우
pkg = c('data.table','xts','quantmod','stringr','timeDate','lubridate')
new.pkg = pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg)) {
install.packages(new.pkg, dependencies = TRUE)}
sapply(pkg,library,character.only=T)
newYorkTime<-with_tz(Sys.time(),"America/New_York")
weekday<-as.POSIXlt(newYorkTime)$wday
holidays<-with_tz(holidayNYSE(year = getRmetricsOptions("currentYear"))@Data,"America/New_York")
if(weekday %in% c(0,6) | as.Date(newYorkTime) %in% as.Date(holidays)){
stop("Today is weekend, or holiday")
}
config<-fromJSON("~/config.json")
#apiConfig<-config$api$config$dev
apiConfig<-config$api$config$prod
#account<-config$api$account$dev
account<-config$api$account$prod$main
symbols = c('TQQQ')
getSymbols(symbols, src = 'yahoo')
prices = do.call(cbind,lapply(symbols, function(x) Ad(get(x))))
prices<-as.data.table(prices)
token<-getToken(apiConfig,account)
currentTQQQPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
tqqqPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
sgovPrice<-getCurrentOverseasPrice(apiConfig,account,token,"SGOV",'AMS')
prices<-as.xts(rbind(prices,data.table(index=Sys.Date(),TQQQ.Adjusted=currentTQQQPrice)))
movingAvg<-NULL
for(i in c(5,10,20,30,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
priceWithMA<-cbind(prices,movingAvg)
priceWithMA<-as.data.table(priceWithMA)
currentPrice<-tail(priceWithMA,1)
currentPrice<-currentPrice[,-1]
currentDisparity<-currentPrice[,lapply(.SD,function(y) 100*TQQQ.Adjusted/y-100)]
currentBalance<-getPresentOverseasBalancesheet(token,apiConfig,account)
if(currentBalance$status_code!='200'){
stop("Fail to get current balance. Stop script")
}
totalBalanceSum<-as.numeric(currentBalance$summary[crcy_cd=="USD",frcr_drwg_psbl_amt_1])
totalBalanceSum<-as.numeric(currentBalance$summary[crcy_cd=="USD",frcr_sll_amt_smtl])
curTQQQRatio<-0
if(nrow(currentBalance$sheet)>0){
totalBalanceSum<-totalBalanceSum+sum(as.numeric(currentBalance$sheet[buy_crcy_cd=="USD",frcr_evlu_amt2]))
curTQQQBalance<-as.numeric(currentBalance$sheet[pdno=="TQQQ",frcr_evlu_amt2])
curTQQQRatio<-curTQQQBalance/totalBalanceSum
}
#TQQQratio
TQQQGoalRatio<-floor(currentDisparity$TQQQ.Adjusted.MA.200)*0.5
TQQQGoalRatio<-min(1,TQQQGoalRatio)
TQQQGoalRatio<-max(0,TQQQGoalRatio)
if(sign(currentDisparity$TQQQ.Adjusted.MA.200)>=0) TQQQGoalRatio<-max(TQQQGoalRatio,curTQQQRatio)
if(sign(currentDisparity$TQQQ.Adjusted.MA.200)<0) TQQQGoalRatio<-min(TQQQGoalRatio,curTQQQRatio)
#sendMessage
message<-paste0("TQQQ price: ",currentPrice$TQQQ.Adjusted)
message<-paste0(message,"\nTQQQ 200 MA: ",round(currentPrice$TQQQ.Adjusted.MA.200,2))
message<-paste0(message,"\nTQQQ Disparity: ", round(currentDisparity$TQQQ.Adjusted.MA.200,2))
message<-paste0(message,"\nToday TQQQ Ratio: ",TQQQGoalRatio)
sendMessage(message)
goalBalanceSum<-totalBalanceSum*TQQQGoalRatio
bondBalanceSum<-totalBalanceSum-goalBalanceSum
goalBalanceSheet<-data.table(종목코드=c('TQQQ'),거래소_현재가='NAS',거래소='NASD',현재가=tqqqPrice,목표금액=goalBalanceSum,signal=sign(currentDisparity$TQQQ.Adjusted.MA.200),주문구분='34')
goalBalanceSheet<-rbind(goalBalanceSheet,data.table(종목코드=c('SGOV'),거래소_현재가='AMS',거래소='AMEX',현재가=sgovPrice,목표금액=bondBalanceSum,signal=0,주문구분='00'))
if(goalBalanceSheet[종목코드=='TQQQ',signal]<0) goalBalanceSheet[종목코드=='TQQQ']$주문구분='00'
goalBalanceSheet
currentBalanceSheet
combinedSheet
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
source("~/StockTradebot/Rscript/Han2FunctionList.R") #macOS에서 읽는 경우
source("~/StockTradebot/Rscript/telegramAPI.R") #macOS에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/Han2FunctionList.R") #라즈베리에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/telegramAPI.R") #라즈베리에서 읽는 경우
pkg = c('data.table','xts','quantmod','stringr','timeDate','lubridate')
new.pkg = pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg)) {
install.packages(new.pkg, dependencies = TRUE)}
sapply(pkg,library,character.only=T)
newYorkTime<-with_tz(Sys.time(),"America/New_York")
weekday<-as.POSIXlt(newYorkTime)$wday
holidays<-with_tz(holidayNYSE(year = getRmetricsOptions("currentYear"))@Data,"America/New_York")
if(weekday %in% c(0,6) | as.Date(newYorkTime) %in% as.Date(holidays)){
stop("Today is weekend, or holiday")
}
config<-fromJSON("~/config.json")
#apiConfig<-config$api$config$dev
apiConfig<-config$api$config$prod
#account<-config$api$account$dev
account<-config$api$account$prod$main
symbols = c('TQQQ')
getSymbols(symbols, src = 'yahoo')
prices = do.call(cbind,lapply(symbols, function(x) Ad(get(x))))
prices<-as.data.table(prices)
token<-getToken(apiConfig,account)
currentTQQQPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
tqqqPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
sgovPrice<-getCurrentOverseasPrice(apiConfig,account,token,"SGOV",'AMS')
prices<-as.xts(rbind(prices,data.table(index=Sys.Date(),TQQQ.Adjusted=currentTQQQPrice)))
movingAvg<-NULL
for(i in c(5,10,20,30,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
priceWithMA<-cbind(prices,movingAvg)
priceWithMA<-as.data.table(priceWithMA)
currentPrice<-tail(priceWithMA,1)
currentPrice<-currentPrice[,-1]
currentDisparity<-currentPrice[,lapply(.SD,function(y) 100*TQQQ.Adjusted/y-100)]
currentBalance<-getPresentOverseasBalancesheet(token,apiConfig,account)
if(currentBalance$status_code!='200'){
stop("Fail to get current balance. Stop script")
}
totalBalanceSum<-as.numeric(currentBalance$summary[crcy_cd=="USD",frcr_drwg_psbl_amt_1])
totalBalanceSum<-as.numeric(currentBalance$summary[crcy_cd=="USD",frcr_sll_amt_smtl])
curTQQQRatio<-0
if(nrow(currentBalance$sheet)>0){
totalBalanceSum<-totalBalanceSum+sum(as.numeric(currentBalance$sheet[buy_crcy_cd=="USD",frcr_evlu_amt2]))
curTQQQBalance<-as.numeric(currentBalance$sheet[pdno=="TQQQ",frcr_evlu_amt2])
curTQQQRatio<-curTQQQBalance/totalBalanceSum
}
#TQQQratio
TQQQGoalRatio<-floor(currentDisparity$TQQQ.Adjusted.MA.200)*0.5
TQQQGoalRatio<-min(1,TQQQGoalRatio)
TQQQGoalRatio<-max(0,TQQQGoalRatio)
if(sign(currentDisparity$TQQQ.Adjusted.MA.200)>=0) TQQQGoalRatio<-max(TQQQGoalRatio,curTQQQRatio)
if(sign(currentDisparity$TQQQ.Adjusted.MA.200)<0) TQQQGoalRatio<-min(TQQQGoalRatio,curTQQQRatio)
#sendMessage
message<-paste0("TQQQ price: ",currentPrice$TQQQ.Adjusted)
message<-paste0(message,"\nTQQQ 200 MA: ",round(currentPrice$TQQQ.Adjusted.MA.200,2))
message<-paste0(message,"\nTQQQ Disparity: ", round(currentDisparity$TQQQ.Adjusted.MA.200,2))
message<-paste0(message,"\nToday TQQQ Ratio: ",TQQQGoalRatio)
sendMessage(message)
goalBalanceSum<-totalBalanceSum*TQQQGoalRatio
bondBalanceSum<-totalBalanceSum-goalBalanceSum
goalBalanceSheet<-data.table(종목코드=c('TQQQ'),거래소_현재가='NAS',거래소='NASD',현재가=tqqqPrice,목표금액=goalBalanceSum,signal=sign(currentDisparity$TQQQ.Adjusted.MA.200),주문구분='34')
goalBalanceSheet<-rbind(goalBalanceSheet,data.table(종목코드=c('SGOV'),거래소_현재가='AMS',거래소='AMEX',현재가=sgovPrice,목표금액=bondBalanceSum,signal=0,주문구분='00'))
if(goalBalanceSheet[종목코드=='TQQQ',signal]<0) goalBalanceSheet[종목코드=='TQQQ']$주문구분='00'
if(nrow(currentBalance$sheet)>0){
currentBalanceSheet<-currentBalance$sheet[,c('pdno','prdt_name','ovrs_excg_cd','ccld_qty_smtl1','frcr_evlu_amt2','buy_crcy_cd')]
names(currentBalanceSheet)<-c('종목코드','종목명','거래소','보유수량','평가금액','매수통화코드')
combinedSheet<-merge(goalBalanceSheet,currentBalanceSheet,by=c('종목코드','거래소'),all=T)
} else{
totalBalanceSum<-0
combinedSheet<-goalBalanceSheet
combinedSheet[,c('평가금액','보유수량'):=0]
}
combinedSheet
combinedSheet[,매수통화코드:='USD']
combinedSheet[,평가금액:=as.numeric(평가금액)]
combinedSheet[,보유수량:=as.numeric(보유수량)]
combinedSheet[is.na(목표금액)]$목표금액<-0
combinedSheet[is.na(평가금액)]$평가금액<-0
combinedSheet[is.na(보유수량)]$보유수량<-0
combinedSheet[is.na(매수통화코드)]$매수통화코드<-"USD"
combinedSheet<-combinedSheet[(signal>0 & 목표금액>평가금액) | (signal<0 & 목표금액<평가금액) | (signal==0 & 평가금액!=목표금액)]
combinedSheet
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
source("~/StockTradebot/Rscript/Han2FunctionList.R") #macOS에서 읽는 경우
source("~/StockTradebot/Rscript/telegramAPI.R") #macOS에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/Han2FunctionList.R") #라즈베리에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/telegramAPI.R") #라즈베리에서 읽는 경우
pkg = c('data.table','xts','quantmod','stringr','timeDate','lubridate')
new.pkg = pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg)) {
install.packages(new.pkg, dependencies = TRUE)}
sapply(pkg,library,character.only=T)
newYorkTime<-with_tz(Sys.time(),"America/New_York")
weekday<-as.POSIXlt(newYorkTime)$wday
holidays<-with_tz(holidayNYSE(year = getRmetricsOptions("currentYear"))@Data,"America/New_York")
if(weekday %in% c(0,6) | as.Date(newYorkTime) %in% as.Date(holidays)){
stop("Today is weekend, or holiday")
}
config<-fromJSON("~/config.json")
#apiConfig<-config$api$config$dev
apiConfig<-config$api$config$prod
#account<-config$api$account$dev
account<-config$api$account$prod$main
symbols = c('TQQQ')
getSymbols(symbols, src = 'yahoo')
prices = do.call(cbind,lapply(symbols, function(x) Ad(get(x))))
prices<-as.data.table(prices)
token<-getToken(apiConfig,account)
currentTQQQPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
tqqqPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
sgovPrice<-getCurrentOverseasPrice(apiConfig,account,token,"SGOV",'AMS')
prices<-as.xts(rbind(prices,data.table(index=Sys.Date(),TQQQ.Adjusted=currentTQQQPrice)))
movingAvg<-NULL
for(i in c(5,10,20,30,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
priceWithMA<-cbind(prices,movingAvg)
priceWithMA<-as.data.table(priceWithMA)
currentPrice<-tail(priceWithMA,1)
currentPrice<-currentPrice[,-1]
currentDisparity<-currentPrice[,lapply(.SD,function(y) 100*TQQQ.Adjusted/y-100)]
currentBalance<-getPresentOverseasBalancesheet(token,apiConfig,account)
if(currentBalance$status_code!='200'){
stop("Fail to get current balance. Stop script")
}
currentBalance
totalBalanceSum
totalBalanceSum<-as.numeric(currentBalance$summary[crcy_cd=="USD",frcr_drwg_psbl_amt_1])
totalBalanceSum<-totalBalanceSum+as.numeric(currentBalance$summary[crcy_cd=="USD",frcr_sll_amt_smtl])
totalBalanceSum
totalBalanceSum<-as.numeric(currentBalance$summary[crcy_cd=="USD",frcr_drwg_psbl_amt_1])
totalBalanceSum<-totalBalanceSum+as.numeric(currentBalance$summary[crcy_cd=="USD",frcr_sll_amt_smtl])
curTQQQRatio<-0
if(nrow(currentBalance$sheet)>0){
totalBalanceSum<-totalBalanceSum+sum(as.numeric(currentBalance$sheet[buy_crcy_cd=="USD",frcr_evlu_amt2]))
curTQQQBalance<-as.numeric(currentBalance$sheet[pdno=="TQQQ",frcr_evlu_amt2])
curTQQQRatio<-curTQQQBalance/totalBalanceSum
}
curTQQQRatio
totalBalanceSum
curTQQQBalance
totalBalanceSum
curTQQQRatio
curTQQQRatio==0
is.null(curTQQQRatio)
is.na(curTQQQRatio)
is.numeric(curTQQQRatio)
length(curTQQQRatio)
length(1)
length(3)
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
source("~/StockTradebot/Rscript/Han2FunctionList.R") #macOS에서 읽는 경우
source("~/StockTradebot/Rscript/telegramAPI.R") #macOS에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/Han2FunctionList.R") #라즈베리에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/telegramAPI.R") #라즈베리에서 읽는 경우
pkg = c('data.table','xts','quantmod','stringr','timeDate','lubridate')
new.pkg = pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg)) {
install.packages(new.pkg, dependencies = TRUE)}
sapply(pkg,library,character.only=T)
newYorkTime<-with_tz(Sys.time(),"America/New_York")
weekday<-as.POSIXlt(newYorkTime)$wday
holidays<-with_tz(holidayNYSE(year = getRmetricsOptions("currentYear"))@Data,"America/New_York")
if(weekday %in% c(0,6) | as.Date(newYorkTime) %in% as.Date(holidays)){
stop("Today is weekend, or holiday")
}
config<-fromJSON("~/config.json")
#apiConfig<-config$api$config$dev
apiConfig<-config$api$config$prod
#account<-config$api$account$dev
account<-config$api$account$prod$main
symbols = c('TQQQ')
getSymbols(symbols, src = 'yahoo')
prices = do.call(cbind,lapply(symbols, function(x) Ad(get(x))))
prices<-as.data.table(prices)
token<-getToken(apiConfig,account)
currentTQQQPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
tqqqPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
sgovPrice<-getCurrentOverseasPrice(apiConfig,account,token,"SGOV",'AMS')
prices<-as.xts(rbind(prices,data.table(index=Sys.Date(),TQQQ.Adjusted=currentTQQQPrice)))
movingAvg<-NULL
for(i in c(5,10,20,30,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
priceWithMA<-cbind(prices,movingAvg)
priceWithMA<-as.data.table(priceWithMA)
currentPrice<-tail(priceWithMA,1)
currentPrice<-currentPrice[,-1]
currentDisparity<-currentPrice[,lapply(.SD,function(y) 100*TQQQ.Adjusted/y-100)]
currentBalance<-getPresentOverseasBalancesheet(token,apiConfig,account)
if(currentBalance$status_code!='200'){
stop("Fail to get current balance. Stop script")
}
currentBalance
totalBalanceSum<-as.numeric(currentBalance$summary[crcy_cd=="USD",frcr_drwg_psbl_amt_1])
totlaBalanceSum
totalBalanceSum
as.numeric(currentBalance$summary[crcy_cd=="USD",frcr_sll_amt_smtl])
6982.38+42.79
7102.0-42.79
output<-NULL
balanceUrl<-paste(apiConfig$url,'/uapi/overseas-stock/v1/trading/inquire-present-balance',sep='')
#token<-getToken(apiConfig,account)
headers<-c(
Authorization=paste('Bearer',token),
appkey=account$appkey,
appsecret=account$appsecret,
tr_id=apiConfig$overseasPresentBalanceTrid
)
query<-list(CANO=substr(account$accNo,1,8),
ACNT_PRDT_CD=substr(account$accNo,9,10),
WCRC_FRCR_DVSN_CD='02',
NATN_CD='000',
TR_MKET_CD='00',
INQR_DVSN_CD='00'
)
response<-GET(balanceUrl,add_headers(headers),query=query)
output$status_code<-response$status_code
if(response$status_code!=200) return(output)
res<-fromJSON(rawToChar(response$content))
ㄱㄷㄴ
res
getPresentOverseasBalancesheet<-function(token,apiConfig,account){
output<-NULL
balanceUrl<-paste(apiConfig$url,'/uapi/overseas-stock/v1/trading/inquire-present-balance',sep='')
#token<-getToken(apiConfig,account)
headers<-c(
Authorization=paste('Bearer',token),
appkey=account$appkey,
appsecret=account$appsecret,
tr_id=apiConfig$overseasPresentBalanceTrid
)
query<-list(CANO=substr(account$accNo,1,8),
ACNT_PRDT_CD=substr(account$accNo,9,10),
WCRC_FRCR_DVSN_CD='02',
NATN_CD='000',
TR_MKET_CD='00',
INQR_DVSN_CD='00'
)
response<-GET(balanceUrl,add_headers(headers),query=query)
output$status_code<-response$status_code
if(response$status_code!=200) return(output)
res<-fromJSON(rawToChar(response$content))
output$sheet<-as.data.table(res$output1)
output$summary<-as.data.table(res$output2)
output$summary2<-as.data.table(res$output3)
return(output)
}
currentBalance<-getPresentOverseasBalancesheet(token,apiConfig,account)
currentBalance
currentBalance$summary2[,"frcr_evlu_tota",1]
currentBalance$summary2[,"frcr_evlu_tota"]
currentBalance$summary2[,"frcr_evlu_tota"][[0]]
currentBalance$summary2[,"frcr_evlu_tota"][1,]
as.numeric(currentBalance$summary2[,"frcr_evlu_tota"])
as.numeric(currentBalance$summary[,"frst_bltn_exrt"])
as.numeric(currentBalance$summary2[,"frcr_evlu_tota"])/as.numeric(currentBalance$summary[,"frst_bltn_exrt"])
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
source("~/StockTradebot/Rscript/Han2FunctionList.R") #macOS에서 읽는 경우
source("~/StockTradebot/Rscript/telegramAPI.R") #macOS에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/Han2FunctionList.R") #라즈베리에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/telegramAPI.R") #라즈베리에서 읽는 경우
pkg = c('data.table','xts','quantmod','stringr','timeDate','lubridate')
new.pkg = pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg)) {
install.packages(new.pkg, dependencies = TRUE)}
sapply(pkg,library,character.only=T)
newYorkTime<-with_tz(Sys.time(),"America/New_York")
weekday<-as.POSIXlt(newYorkTime)$wday
holidays<-with_tz(holidayNYSE(year = getRmetricsOptions("currentYear"))@Data,"America/New_York")
if(weekday %in% c(0,6) | as.Date(newYorkTime) %in% as.Date(holidays)){
stop("Today is weekend, or holiday")
}
config<-fromJSON("~/config.json")
#apiConfig<-config$api$config$dev
apiConfig<-config$api$config$prod
#account<-config$api$account$dev
account<-config$api$account$prod$main
symbols = c('TQQQ')
getSymbols(symbols, src = 'yahoo')
prices = do.call(cbind,lapply(symbols, function(x) Ad(get(x))))
prices<-as.data.table(prices)
token<-getToken(apiConfig,account)
currentTQQQPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
tqqqPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
sgovPrice<-getCurrentOverseasPrice(apiConfig,account,token,"SGOV",'AMS')
prices<-as.xts(rbind(prices,data.table(index=Sys.Date(),TQQQ.Adjusted=currentTQQQPrice)))
movingAvg<-NULL
for(i in c(5,10,20,30,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
priceWithMA<-cbind(prices,movingAvg)
priceWithMA<-as.data.table(priceWithMA)
currentPrice<-tail(priceWithMA,1)
currentPrice<-currentPrice[,-1]
currentDisparity<-currentPrice[,lapply(.SD,function(y) 100*TQQQ.Adjusted/y-100)]
currentBalance<-getPresentOverseasBalancesheet(token,apiConfig,account)
if(currentBalance$status_code!='200'){
stop("Fail to get current balance. Stop script")
}
totalBalanceSum<-floor(as.numeric(currentBalance$summary2[,"frcr_evlu_tota"])/as.numeric(currentBalance$summary[,"frst_bltn_exrt"]))
curTQQQRatio<-0
if(nrow(currentBalance$sheet)>0){
totalBalanceSum<-totalBalanceSum+sum(as.numeric(currentBalance$sheet[buy_crcy_cd=="USD",frcr_evlu_amt2]))
curTQQQBalance<-as.numeric(currentBalance$sheet[pdno=="TQQQ",frcr_evlu_amt2])
curTQQQRatio<-curTQQQBalance/totalBalanceSum
if(length(curTQQQRatio)) curTQQQRatio<-0
}
totalBalanceSum
currentBalance
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
source("~/StockTradebot/Rscript/Han2FunctionList.R") #macOS에서 읽는 경우
source("~/StockTradebot/Rscript/telegramAPI.R") #macOS에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/Han2FunctionList.R") #라즈베리에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/telegramAPI.R") #라즈베리에서 읽는 경우
pkg = c('data.table','xts','quantmod','stringr','timeDate','lubridate')
new.pkg = pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg)) {
install.packages(new.pkg, dependencies = TRUE)}
sapply(pkg,library,character.only=T)
newYorkTime<-with_tz(Sys.time(),"America/New_York")
weekday<-as.POSIXlt(newYorkTime)$wday
holidays<-with_tz(holidayNYSE(year = getRmetricsOptions("currentYear"))@Data,"America/New_York")
if(weekday %in% c(0,6) | as.Date(newYorkTime) %in% as.Date(holidays)){
stop("Today is weekend, or holiday")
}
config<-fromJSON("~/config.json")
#apiConfig<-config$api$config$dev
apiConfig<-config$api$config$prod
#account<-config$api$account$dev
account<-config$api$account$prod$main
symbols = c('TQQQ')
getSymbols(symbols, src = 'yahoo')
prices = do.call(cbind,lapply(symbols, function(x) Ad(get(x))))
prices<-as.data.table(prices)
token<-getToken(apiConfig,account)
currentTQQQPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
tqqqPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
sgovPrice<-getCurrentOverseasPrice(apiConfig,account,token,"SGOV",'AMS')
prices<-as.xts(rbind(prices,data.table(index=Sys.Date(),TQQQ.Adjusted=currentTQQQPrice)))
movingAvg<-NULL
for(i in c(5,10,20,30,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
priceWithMA<-cbind(prices,movingAvg)
priceWithMA<-as.data.table(priceWithMA)
currentPrice<-tail(priceWithMA,1)
currentPrice<-currentPrice[,-1]
currentDisparity<-currentPrice[,lapply(.SD,function(y) 100*TQQQ.Adjusted/y-100)]
currentBalance<-getPresentOverseasBalancesheet(token,apiConfig,account)
if(currentBalance$status_code!='200'){
stop("Fail to get current balance. Stop script")
}
currentBalance
token
token<-getToken(apiConfig,account)
token
currentTQQQPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
tqqqPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
sgovPrice<-getCurrentOverseasPrice(apiConfig,account,token,"SGOV",'AMS')
prices<-as.xts(rbind(prices,data.table(index=Sys.Date(),TQQQ.Adjusted=currentTQQQPrice)))
totalBalanceSum
#setwd("/home/pi/stockInfoCrawler/StockTradebot/Rscript")
setwd("/Users/chhan/StockTradebot/Rscript")
source("~/StockTradebot/Rscript/Han2FunctionList.R") #macOS에서 읽는 경우
source("~/StockTradebot/Rscript/telegramAPI.R") #macOS에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/Han2FunctionList.R") #라즈베리에서 읽는 경우
#source("~/stockInfoCrawler/StockTradebot/Rscript/telegramAPI.R") #라즈베리에서 읽는 경우
pkg = c('data.table','xts','quantmod','stringr','timeDate','lubridate')
new.pkg = pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg)) {
install.packages(new.pkg, dependencies = TRUE)}
sapply(pkg,library,character.only=T)
newYorkTime<-with_tz(Sys.time(),"America/New_York")
weekday<-as.POSIXlt(newYorkTime)$wday
holidays<-with_tz(holidayNYSE(year = getRmetricsOptions("currentYear"))@Data,"America/New_York")
if(weekday %in% c(0,6) | as.Date(newYorkTime) %in% as.Date(holidays)){
stop("Today is weekend, or holiday")
}
config<-fromJSON("~/config.json")
#apiConfig<-config$api$config$dev
apiConfig<-config$api$config$prod
#account<-config$api$account$dev
account<-config$api$account$prod$main
symbols = c('TQQQ')
getSymbols(symbols, src = 'yahoo')
prices = do.call(cbind,lapply(symbols, function(x) Ad(get(x))))
prices<-as.data.table(prices)
token<-getToken(apiConfig,account)
currentTQQQPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
tqqqPrice<-getCurrentOverseasPrice(apiConfig,account,token,"TQQQ",'NAS')
sgovPrice<-getCurrentOverseasPrice(apiConfig,account,token,"SGOV",'AMS')
prices<-as.xts(rbind(prices,data.table(index=Sys.Date(),TQQQ.Adjusted=currentTQQQPrice)))
movingAvg<-NULL
for(i in c(5,10,20,30,60,100,200)){
tbl<-as.xts(prices)
tbl<-do.call(cbind,lapply(tbl,function(y)rollmean(y,i,align='right')))
names(tbl)<-paste0(names(tbl),".MA.",i)
movingAvg<-cbind(movingAvg,tbl)
}
priceWithMA<-cbind(prices,movingAvg)
priceWithMA<-as.data.table(priceWithMA)
currentPrice<-tail(priceWithMA,1)
currentPrice<-currentPrice[,-1]
currentDisparity<-currentPrice[,lapply(.SD,function(y) 100*TQQQ.Adjusted/y-100)]
currentBalance<-getPresentOverseasBalancesheet(token,apiConfig,account)
if(currentBalance$status_code!='200'){
stop("Fail to get current balance. Stop script")
}
token
token<-getToken(apiConfig,account)
token
token<-getToken(apiConfig,account)
token
